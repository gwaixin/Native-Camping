{"version":3,"sources":["lesson.coffee"],"names":[],"mappings":"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","file":"lesson.js","sourcesContent":["'use strict'\n\nwindow.ncApp.controller 'Lesson', [\n\t'$scope'\n\t'$http'\n\t($s, $http) ->\n\t\tself = this\n\t\t\n\t\t### initialize variables ###\n\t\t$s.chats = []\n\t\t$s.chatMessage = \"\"\n\t\t\n\t\t### initialize lesson ###\n\t\t$s.init = () ->\n\t\t\tconnect.init (conn) ->\n\t\t\t\t### initialize camera ###\n\t\t\t\tconnect.initializeCamera ->\n\t\t\t\t\t### initialize events ###\n\t\t\t\t\teventCommon.init()\n\t\t\t\t\t### initialize student events ###\n\t\t\t\t\teventStudent.init()\n\t\t\t\t\t### initialize connect to room ###\n\t\t\t\t\teventCommon.connectToRoom()\n\t\t\t\t\t### catch when no camera is detected ###\n\t\t\t\t\treturn\n\t\t\t\t, ->\n\t\t\t\t\tconsole.log 'Cannot detect camera'\n\t\t\t\t\treturn\n\t\t\t\treturn\n\t\t\t, (error, conn) ->\n\t\t\t\tconsole.warn 'ERROR to connect socket: ', error, conn\n\t\t\t\treturn\n\t\t\treturn\n\t\t\t\n\t\t###*\n\t\t * disconnecting lesson\n\t\t * @param  {Object} data  contains information about the disconnection\n\t\t###\n\t\t$s.lessonDisconnect = (data) ->\n\t\t\tconsole.warn data\n\t\t\t\n\t\t\t### prepare command ###\n\t\t\tcommand = if typeof data.command != 'undefined' then data.command else 'unknown'\n\t\t\t\n\t\t\t### process the disconnection ###\n\t\t\tswitch command\n\t\t\t\twhen constant.disconnect.teacher.others\n\t\t\t\t\t### teacher has suddenly stop the lesosn by others ###\n\t\t\t\t\tconsole.warn '[SOCKET] teacher stopped lesson by others'\n\t\t\t\t\t$s.$apply () ->\n\t\t\t\t\t\t$s.sendMessage \"teacher left the lesson\", \"system\"\n\t\t\t\t\tsetTimeout () ->\n\t\t\t\t\t\twindow.location.href = '/student/teacher/' + connect.config.teacherID + \"?action=lessonEnd\"\n\t\t\t\t\t, 1000\n\t\t\t\t\tbreak\n\t\t\t\twhen constant.disconnect.teacher.sudden\n\t\t\t\t\t### student will be notify by theacher's sudden disconnection ###\n\t\t\t\t\tconsole.warn '[SOCKET] teacher sudden disconnection'\n\t\t\t\t\t$s.$apply () ->\n\t\t\t\t\t\t$s.sendMessage \"teacher sudden disconnection\", \"system\"\n\t\t\t\t\tbreak\n\t\t\t\twhen constant.disconnect.teacher.timeOut\n\t\t\t\t\t### teacher's connection to the socket server timed out ###\n\t\t\t\t\tconsole.log '[SOCKET] Because the teacher was unable to reconnect within the alotted time, the system will automatically end the lesson.'\n\t\t\t\t\t### redirect student to dashboard ###\n\t\t\t\t\tsetTimeout () ->\n\t\t\t\t\t\twindow.location.href = '/student?action=' + command\n\t\t\t\t\t\treturn\n\t\t\t\t\t, 2000\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\tconsole.log '[SOCKET] Unknown disconnection command -> ', command\n\t\t\treturn\n\t\t\n\t\t###*\n\t\t * stops lesson and process disconnecting to socket and redirect to finish lesson page\n\t\t###\n\t\t$s.endLesson = () ->\n\t\t\tconsole.warn '[NG] ending the lesson'\n\t\t\tif confirm \"Are you sure you want to end lesson now?\"\n\t\t\t\tdata = {\n\t\t\t\t\tcommand: 'studentLessonFinished'\n\t\t\t\t\tcontent: connect.config\n\t\t\t\t\tmode: 'to'\n\t\t\t\t}\n\t\t\t\teventCommon.sendCommand data\n\t\t\t\twindow.location.href = \"/student/lesson_finish\"\n\t\t\treturn\n\t\t\t\n\t\t$s.sendMessage = (message, sender) ->\n\t\t\tconsole.log '[NG] sending message init'\n\t\t\t\n\t\t\tif message == \"\" or typeof message == \"undefined\"\n\t\t\t\tconsole.warn '[NG] message is empty'\n\t\t\t\treturn\n\t\t\t\n\t\t\tconsole.log '[NG] continue message sending'\n\t\t\t\n\t\t\t### prepare message data ###\n\t\t\tdata = {\n\t\t\t\tcommand: 'sendChat'\n\t\t\t\tcontent: connect.config\n\t\t\t\tmode: 'to'\n\t\t\t\tmessage: message\n\t\t\t}\n\t\t\t\n\t\t\t### check if there was a sender, otherwise the student is the sender ###\n\t\t\tif typeof sender == 'undefined'\n\t\t\t\tsender = \"me\"\n\t\t\t\t### send chat to teacher via socket ###\n\t\t\t\teventCommon.sendCommand data\n\t\t\telse if sender == 'system'\n\t\t\t\t### just do nothing ###\n\t\t\telse \n\t\t\t\tsender = connect.config.userID\n\t\t\t\t\n\t\t\t### insert new message to chat layout ###\n\t\t\t$s.chats.push {\n\t\t\t\tsender: sender\n\t\t\t\tmessage: message\n\t\t\t}\n\t\t\t### clear message chat input ###\n\t\t\t$s.chatMessage = \"\"\n\t\t\treturn\n\t\treturn\n]\n\n.directive 'ngEnter', () ->\n\t(scope, element, attrs) ->\n\t\telement.bind 'keydown keypress', (event) ->\n\t\t\tif event.which == 13\n\t\t\t\tscope.$apply () ->\n\t\t\t\t\tscope.$eval attrs.ngEnter\n\t\t\t\t\treturn\n\t\t\t\tevent.preventDefault()\n\t\t\treturn\n\t\treturn"],"sourceRoot":"/source/"}